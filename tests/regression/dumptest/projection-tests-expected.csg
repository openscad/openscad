group() {
	projection(cut = false, convexity = 0);
	projection(cut = false, convexity = 0);
	projection(cut = true, convexity = 0) {
		square(size = [1, 1], center = false);
	}
	linear_extrude(height = 20, center = false, convexity = 1, scale = [1, 1], $fn = 0, $fa = 12, $fs = 2) {
		projection(cut = false, convexity = 0) {
			sphere($fn = 0, $fa = 12, $fs = 2, r = 10);
		}
	}
	multmatrix([[1, 0, 0, 22], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
		linear_extrude(height = 20, center = false, convexity = 1, scale = [1, 1], $fn = 0, $fa = 12, $fs = 2) {
			projection(cut = true, convexity = 0) {
				multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 9], [0, 0, 0, 1]]) {
					sphere($fn = 0, $fa = 12, $fs = 2, r = 10);
				}
			}
		}
	}
	multmatrix([[1, 0, 0, 44], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
		linear_extrude(height = 20, center = false, convexity = 1, scale = [1, 1], $fn = 0, $fa = 12, $fs = 2) {
			projection(cut = true, convexity = 0) {
				multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 7], [0, 0, 0, 1]]) {
					sphere($fn = 0, $fa = 12, $fs = 2, r = 10);
				}
			}
		}
	}
	multmatrix([[1, 0, 0, 0], [0, 1, 0, -22], [0, 0, 1, 0], [0, 0, 0, 1]]) {
		linear_extrude(height = 5, center = false, convexity = 1, scale = [1, 1], $fn = 0, $fa = 12, $fs = 2) {
			projection(cut = true, convexity = 0) {
				multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, -5], [0, 0, 0, 1]]) {
					cube(size = [10, 10, 10], center = true);
				}
			}
		}
	}
	multmatrix([[1, 0, 0, 0], [0, 1, 0, -44], [0, 0, 1, 0], [0, 0, 0, 1]]) {
		linear_extrude(height = 5, center = false, convexity = 1, scale = [1, 1], $fn = 0, $fa = 12, $fs = 2) {
			projection(cut = true, convexity = 0) {
				union() {
					difference() {
						cube(size = [5, 5, 5], center = true);
						cube(size = [4, 4, 4], center = true);
					}
					multmatrix([[1, 0, 0, 2.1], [0, 1, 0, 2.1], [0, 0, 1, 0], [0, 0, 0, 1]]) {
						difference() {
							cube(size = [5, 5, 5], center = true);
							cube(size = [4, 4, 4], center = true);
						}
					}
				}
			}
		}
	}
}
