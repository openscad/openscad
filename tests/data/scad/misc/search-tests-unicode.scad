//Test search with unicode strings

//Helper function that pretty prints our search test
//Expected result is checked against execution of a search() invocation and OK/FAIL is indicated
module test_search_and_echo( exp_res, search_to_find, search_to_search, search_up_to_num_matches = undef) {
   if (undef != search_up_to_num_matches) {
      test_res = search(search_to_find, search_to_search, search_up_to_num_matches);
      echo(str("Expect ", exp_res, " for search(", search_to_find, ", ", search_to_search, ", ", search_up_to_num_matches, ")=", test_res, ". ", (exp_res == test_res)?"OK":"FAIL"  ));
   }
   else {
      test_res = search(search_to_find, search_to_search);
      echo(str("Expect ", exp_res, " for search(", search_to_find, ", ", search_to_search, ")=", test_res, ". ", (exp_res == test_res)?"OK":"FAIL"  ));
   }
}


//"Normal" text for comparison
echo ("----- Lookup of 1 byte into 1 byte");
//Hits - up_to_count 1
test_search_and_echo( [0],   "a","aaaa" );
test_search_and_echo( [0],   "a","aaaa",1 );
test_search_and_echo( [0,0], "aa","aaaa" );
test_search_and_echo( [0,0], "aa","aaaa",1 );


//Hits - up to count 1+ (incl 0 == all)
test_search_and_echo( [[0,1,2,3]] , 	"a","aaaa",0 );
test_search_and_echo( [[0,1]], 			"a","aaaa",2 );
test_search_and_echo( [[0,1,2]], 		"a","aaaa",3 );
test_search_and_echo( [[0,1,2,3]] , 	"a","aaaa",4 );
test_search_and_echo( [[0,1,2,3],[0,1,2,3]] , "aa","aaaa",0 );
//Misses
test_search_and_echo( [],		"b","aaaa" );
test_search_and_echo( [],		"b","aaaa",1 );
test_search_and_echo( [[]],		"b","aaaa",0 );
test_search_and_echo( [[]],		"b","aaaa",2 );

test_search_and_echo( [],			"bb","aaaa" );
test_search_and_echo( [],			"bb","aaaa",1 );
test_search_and_echo( [[],[]],		"bb","aaaa",0 );
test_search_and_echo( [[],[]],		"bb","aaaa",2 );
//Miss - empties
test_search_and_echo( [], "","aaaa" );
test_search_and_echo( [], "","" );
test_search_and_echo( [], "a","" );


//Unicode tests
echo ("----- Lookup of multi-byte into 1 byte");
test_search_and_echo( [],		"Ğ›","aaaa" );
test_search_and_echo( [],		"ğŸ‚¡","aaaa" );
test_search_and_echo( [[]],		"Ğ›","aaaa",0 );
test_search_and_echo( [[]],		"ğŸ‚¡","aaaa",0 );

test_search_and_echo( [],		"Ğ›Ğ›","aaaa" );
test_search_and_echo( [],		"ğŸ‚¡ğŸ‚¡","aaaa" );
test_search_and_echo( [[],[]],		"Ğ›Ğ›","aaaa",0 );
test_search_and_echo( [[],[]],		"ğŸ‚¡ğŸ‚¡","aaaa",0 );

echo ("----- Lookup of 1-byte into multi-byte");
test_search_and_echo( [] , "a","Ğ›Ğ›Ğ›Ğ›" );
test_search_and_echo( [] , "a","ğŸ‚¡ğŸ‚¡ğŸ‚¡ğŸ‚¡" );
test_search_and_echo( [] , "a","Ğ›Ğ›Ğ›Ğ›",1 );

test_search_and_echo( [[]] , "a","ğŸ‚¡ğŸ‚¡ğŸ‚¡ğŸ‚¡",0 );
test_search_and_echo( [[]] , "a","ğŸ‚¡ğŸ‚¡ğŸ‚¡ğŸ‚¡",2 );

echo ("----- Lookup of 1-byte into mixed multi-byte");
test_search_and_echo( [0], "a","aĞ›aĞ›aĞ›aĞ›a" );
test_search_and_echo( [0], "a","ağŸ‚¡ağŸ‚¡ağŸ‚¡ağŸ‚¡a" );
test_search_and_echo( [0], "a","ağŸ‚¡Ğ›ğŸ‚¡ağŸ‚¡Ğ›ğŸ‚¡a" );

test_search_and_echo( [[0,2,4,6,8]], "a","aĞ›aĞ›aĞ›aĞ›a",0 );
test_search_and_echo( [[0,2,4,6,8]], "a","ağŸ‚¡ağŸ‚¡ağŸ‚¡ağŸ‚¡a", 0 );
test_search_and_echo( [[0,4,8]]    , "a","ağŸ‚¡Ğ›ğŸ‚¡ağŸ‚¡Ğ›ğŸ‚¡a", 0 );

echo ("----- Lookup of 2-byte into 2-byte");
test_search_and_echo( [0]       , "Ğ›","Ğ›Ğ›Ğ›Ğ›" );
test_search_and_echo( [[0,1,2,3]] , "Ğ›","Ğ›Ğ›Ğ›Ğ›",0 );

echo ("----- Lookup of 2-byte into 4-byte");
test_search_and_echo( [] , "Ğ›","ğŸ‚¡ğŸ‚¡ğŸ‚¡ğŸ‚¡" );

echo ("----- Lookup of 4-byte into 4-byte");
test_search_and_echo( [0] , 		  "ğŸ‚¡","ğŸ‚¡ğŸ‚¡ğŸ‚¡ğŸ‚¡" );
test_search_and_echo( [[0,1,2,3]], "ğŸ‚¡","ğŸ‚¡ğŸ‚¡ğŸ‚¡ğŸ‚¡",0 );

echo ("----- Lookup of 4-byte into 2-byte");
test_search_and_echo( [] , "ğŸ‚¡","Ğ›Ğ›Ğ›Ğ›" );

echo ("----- Lookup of 2-byte into mixed multi-byte");
test_search_and_echo( [1] , 	"Ğ›","aĞ›aĞ›aĞ›aĞ›a",1 );
test_search_and_echo( [] , 	"Ğ›","ağŸ‚¡ağŸ‚¡ağŸ‚¡ağŸ‚¡a", 1 );
test_search_and_echo( [2] , 	"Ğ›","ağŸ‚¡Ğ›ğŸ‚¡ağŸ‚¡Ğ›ğŸ‚¡a", 1 );

test_search_and_echo( [[1,3,5,7]] , 	"Ğ›","aĞ›aĞ›aĞ›aĞ›a",0 );
test_search_and_echo( [[]] , 				"Ğ›","ağŸ‚¡ağŸ‚¡ağŸ‚¡ağŸ‚¡a", 0 );
test_search_and_echo( [[2,6]] , 			"Ğ›","ağŸ‚¡Ğ›ğŸ‚¡ağŸ‚¡Ğ›ğŸ‚¡a", 0 );

echo ("----- Lookup of 4-byte into mixed multi-byte");
test_search_and_echo( [] , 			"ğŸ‚¡","aĞ›aĞ›aĞ›aĞ›a",1 );
test_search_and_echo( [1] , "ğŸ‚¡","ağŸ‚¡ağŸ‚¡ağŸ‚¡ağŸ‚¡a", 1 );

test_search_and_echo( [[]] , 			"ğŸ‚¡","aĞ›aĞ›aĞ›aĞ›a",0 );
test_search_and_echo( [[1,3,5,7]] , "ğŸ‚¡","ağŸ‚¡ağŸ‚¡ağŸ‚¡ağŸ‚¡a", 0 );
test_search_and_echo( [[1,3,5,7]] , "ğŸ‚¡","ağŸ‚¡Ğ›ğŸ‚¡ağŸ‚¡Ğ›ğŸ‚¡a", 0 );

echo ("----- Lookup of mixed multi-byte into mixed multi-byte");
test_search_and_echo( [[0,2,4,6,8],[1,3,5,7],[]], "aĞ›ğŸ‚¡","aĞ›aĞ›aĞ›aĞ›a",0 );
test_search_and_echo( [[0,2,4,6,8],[],[1,3,5,7]], "aĞ›ğŸ‚¡","ağŸ‚¡ağŸ‚¡ağŸ‚¡ağŸ‚¡a", 0 );
test_search_and_echo( [[0,4,8],[2,6],[1,3,5,7]]    , "aĞ›ğŸ‚¡","ağŸ‚¡Ğ›ğŸ‚¡ağŸ‚¡Ğ›ğŸ‚¡a", 0 );
test_search_and_echo( [[1,3,5,7],[0,4,8],[2,6]]    , "ğŸ‚¡aĞ›","ağŸ‚¡Ğ›ğŸ‚¡ağŸ‚¡Ğ›ğŸ‚¡a", 0 );

