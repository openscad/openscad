set(USE_PBUFFER 1)
if (USE_PBUFFER)
  set(PBUFFER_SOURCES
    submodules/OpenCSG/src/pBufferTexture.cpp
    submodules/OpenCSG/RenderTexture/RenderTexture.cpp
  )
endif(USE_PBUFFER)    

set(OPENCSG_SOURCES
  submodules/OpenCSG/src/area.cpp
  submodules/OpenCSG/src/batch.cpp
  submodules/OpenCSG/src/context.cpp
  submodules/OpenCSG/src/channelManager.cpp
  submodules/OpenCSG/src/frameBufferObject.cpp
  submodules/OpenCSG/src/frameBufferObjectExt.cpp
  submodules/OpenCSG/src/occlusionQuery.cpp
  submodules/OpenCSG/src/opencsgRender.cpp
  submodules/OpenCSG/src/openglHelper.cpp
  submodules/OpenCSG/src/primitive.cpp
  submodules/OpenCSG/src/primitiveHelper.cpp
  submodules/OpenCSG/src/renderGoldfeather.cpp
  submodules/OpenCSG/src/renderSCS.cpp
  submodules/OpenCSG/src/scissorMemo.cpp
  submodules/OpenCSG/src/settings.cpp
  submodules/OpenCSG/src/stencilManager.cpp
  ${PBUFFER_SOURCES}
)

add_library(OpenCSGObjects OBJECT ${OPENCSG_SOURCES})
target_include_directories(OpenCSGObjects PRIVATE OpenCSG submodules/OpenCSG/include)
target_link_libraries(OpenCSGObjects PRIVATE GLEW::glew)

add_library(OpenCSG INTERFACE)
target_include_directories(OpenCSG INTERFACE submodules/OpenCSG/include)
target_sources(OpenCSG INTERFACE $<TARGET_OBJECTS:OpenCSGObjects>)
